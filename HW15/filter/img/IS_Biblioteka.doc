
БЕЛОРУССКИЙ ГОСУДАРСТВЕННЫЙ УНИВЕРСИТЕТ  

                                                     

      		   МЕХАНИКО-МАТЕМАТИЧЕСКИЙ ФАКУЛЬТЕТ  

                                                     

  				  КАФЕДРА ВЕБ-ТЕХНОЛОГИЙ
                                                     

                                                     

                                                     

                                                   Учебная дисциплина  

                                                   «Базы данных»  

                                                     

                                                     

                                                     

                                                     

                                                     

         		    ОТЧЕТ ПО ИНДИВИДУАЛЬНОМУ ЗАДАНИЮ  

                    	 «ПРОЕКТИРОВАНИЕ БАЗ ДАННЫХ»  

                                                     

                                                     

                                                     

                                                     

                                                   Тема проекта  

                                                   «Ресторан»  

                                                     

                                                     

                                                     

                                                     

                                                     

                                                   Автор проекта:  

 Студент 2 курса 
 2 группы                                        
                                                    дневного отделения  

                                                    Ерошкин П.В.  

                                                     

                                                     

                                                     

                                                     

                                                     

                                                     

                                                     

                                                     

                                              Минск  

                                                2018  


          		ПРОЕКТИРОВАНИЕ ИНФОРМАЦИОННОЙ СИСТЕМЫ  

                              «Ресторан»  

                                                

   Назначение информационной системы и рассматриваемая предметная  

                                         область  

       Информационная          система       "Ресторан"        представляет        собой  
соответствующую        базу   данных     и  набор    запросов    к   ней,   реализующих информационные потребности пользователя.  

       База   данных   предназначена   для   хранения   данных   о   блюдах, продаваемых в ресторанах, а также продуктах, используемых в этих блюдах.             
       К  объектам  и  атрибутам,  позволяющим  охарактеризовать  отдельные блюда:  

   1.  Рецепт  

   2.  Группа к которой принадлежит блюдо(суп, пицца, напиток и т.д) 

   3.  
Название 
   4.  Стоимость


       Анализ определенных ранее объектов и атрибутов позволяет выделить  
следующие сущности проектируемой базы данных и построить ее  

информационно-логическую модель.                                                                                

       К стержневым сущностям  рассматриваемой БД можно отнести  
следующие сущности: Блюдо, Склад.
  
	К   ассоциативным  сущностям  рассматриваемой  БД  можно отнести  
следующие сущности: Продукт, Группа, Рецепт.  

                      Описание стержневых сущностей  

Dish - эта сущность отводится для хранения сведений о блюдах и является центральной во всей БД.
1) id – уникальный идентификатор для каждого блюда.(совпадения не     допускаются)
          Тип данных – Счетчик.
2) group_id – id группы, к которой относиться блюдо. Является    foreign key.  
          Тип данных – Числовой.
          Ограничения:
1) Обязательное поле – Да.
2) Пустые строки – Нет.
       3) name – название блюда.
          Тип данных – Длинный текст.
          Ограничения:
1) Обязательное поле – Да.
2) Пустые строки – Нет.
       4) recipe – рецепт блюда.
          Тип данных – Длинный текст.
          Ограничения:
1) Обязательное поле – Да.
2) Пустые строки – Нет.
  
   Так   как   рецепт   и   название блюда могут     быть     достаточно      громоздкими, я решил выбрать тип данных длинный текст для этих столбцов.   
    Так как название групп может быть достаточно громоздким и встречаться довольно таки часто, то их целесообразно вынести в отдельную таблицу. А  затем нумеровать группы и ссылаться на эти номера. Для этого вводится суррогатный ключ (счетчик) — целочисленный  

атрибут id, который будет автоматически наращиваться на единицу при вводе  

в базу данных новой группы. Аналогично  создаются  суррогатные  ключи  для  большинства  сущностей модели БД.  

  

Stock - эта сущность отводится описания склада ресторана. В ней хранится информация о продуктах доступных на складе.
1) product_id – id продукта. Является foreign key.
          Тип данных – Числовой.
          Ограничения:
1) Обязательное поле – Да.	
2) Пустые строки – Нет.
       2) purchase_date – дата покупки продукта.
          Тип данных – Дата и время	.
          Ограничения:
1) Обязательное поле – Да.
2) Пустые строки – Нет.
       3) quantity(kg) – колличество в кг купленного продукта.
          Тип данных – Числовой.
          Ограничения:
1) Обязательное поле – Да.
2) Пустые строки – Нет.
4) price – цена за весь купленный продукт.
   Тип данных – Денежный.
          Ограничения:
1) Обязательное поле – Да.
2) Пустые строки – Нет.
       
 Описание ассоциативных сущностей

Product - эта сущность отводится для хранения сведений о продуктах, из которых готовяться блюда.
1) id – уникальный идентификатор для каждого продукта.(совпадения не допускаются)
          Тип данных – Счетчик.
2) name – название продукта.
          Тип данных – Короткий текст.
          Ограничения:
1) Обязательное поле – Да.
2) Пустые строки – Нет.
                                                  
Так как названия продуктов встречаются достаточно часто и они могут быть достаточно длинными, то их целесообразно вынести в отдельную таблицу. А так же это поможет нам в будущем при расширение нашей бд. Если мы захотим добавить калорийность для каждого продукта, достаточно это будет сделать только в таблице Product. 

Composition - эта сущность отводится для хранения состава продуктов каждого блюда из таблицы Dish.
1) product_id – id продукта, которой содержится в блюде. Является foreign key.  
          Тип данных – Числовой.
          Ограничения:
1) Обязательное поле – Да.
2) Пустые строки – Нет.
       2) dish_id – id блюда. Является foreign key.
          Тип данных – Числовой.
          Ограничения:
1) Обязательное поле – Да.
2) Пустые строки – Нет.
       3) quantity(gr) – количество продукта в граммах.
          Тип данных – Числовой.
          Ограничения:
1) Обязательное поле – Да.
       	2) Пустые строки – Нет.

Group - эта сущность отводится для хранения информации о пищевых группах.
1) id – id группы
          Тип данных – Числовой.
          Ограничения:
1) Обязательное поле – Да.
2) Пустые строки – Нет.
       2) dish_id – id блюда. Является foreign key.
          Тип данных – Числовой.
          Ограничения:
1) Обязательное поле – Да.
2) Пустые строки – Нет.
       3) quantity(gr) – количество продукта в граммах.
          Тип данных – Числовой.
          Ограничения:
1) Обязательное поле – Да.
       	2) Пустые строки – Нет.

Создание таблицы composition позволило избежать многих проблем, связанных с нормализацией базы данных. 

                                           

                 Перечень запросов к базе данных "Библиотека"  

       Запрос   1.   Вывести   заглавия   книг,   которые   выданы   читателю   (ИД  

читателя известен) .  

       Список  необходимых  таблиц:  Люди,  Выдачи,  Экземпляры,  Издания,  

Заглавия.  

       Список выводимых полей: Заглавия.Наименование.  

       Условия   связи   между   таблицами:   Люди.ИД=Выдачи.Человек_ИД;  

Выдачи.Экземпляр_ИД=Экземпляры.ИД;                          Экземпляры.Издание_ИД=  

Издания.ИД; Издания.Заглавие_ИД=Заглавия.ИД.  

       Дополнительные требования: ИД читателя вводится как параметр.  

  

       Запрос 2. Вывести сведения о 3 издательствах, выпускающих учебную  

литературу, книги которых наиболее широко представлены в библиотеке.  

       Список необходимых таблиц: Издательства, Издания, Типы_Изданий.  

       Список         выводимых            полей:        Издательства.Наименование,  

Издательства.Адрес .  

       Список выводимых значений: количество учебных изданий.  

       Условия         связи        между        таблицами:           Издательства .ИД=  

Издания.Издательство_ИД; Издания.Тип_издания_ИД=Типы_Изданий.ИД.  

       Условия       на     значения:        Типы_Изданий.Наименование='учебная  

литература'.  

       Дополнительные         требования:       группировка     по    ИД   издательства,  

сортировка по убыванию количества учебных изданий, вывод  только  начала  

списка.  

         

       Запрос  3.  Определить месторасположение  в хранилище книги Алексея  

Толстого "Аэлита" (ИД издания и ИД автора неизвестны).  

       Список      необходимых         таблиц:     Люди,      Участники,      Создатели,  

Экземпляры, Издания, Заглавия, Места.  

       Список  выводимых  полей:  Экземпляры.ИД,  Места.Номер_Комнаты,  

Места. Номер_Стеллажа, Места.Номер_Полки .  

       Условия связи между таблицами:  Люди.ИД=Участники .Человек_ИД;  

Участники .Создатель_ИД=Создатели.ИД;                         Экземпляры.Место_ИД=  

Места.ИД;       Заглавия.ИД=Издания.Заглавие_ИД;              Участники .Издание_ИД=  

Издания.ИД; Издания.ИД=Экземпляры.Издание_ИД.  

       Условия       на    значения:       Люди.Фамилия='Толстой',           Люди.Имя=  

'Алексей',      Заглавия.Наименование='Аэлита',             Создатели.Наименование=  

'автор'.  

